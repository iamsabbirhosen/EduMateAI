{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/app/api/admin/classes/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\n// Simple admin auth check\r\nfunction isAdminRequest(request: NextRequest): boolean {\r\n  const referer = request.headers.get('referer');\r\n  return !!(referer && referer.includes('localhost:9002/admin'));\r\n}\r\n\r\n// Helper function to convert Bengali/English text to URL-safe folder name\r\nfunction toKebabCase(str: string): string {\r\n  return str\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters\r\n    .replace(/[\\s_-]+/g, '-') // Replace spaces and underscores with hyphens\r\n    .replace(/^-+|-+$/g, ''); // Remove leading/trailing hyphens\r\n}\r\n\r\n// Helper function to transliterate Bengali to English (basic)\r\nfunction transliterateBengali(bengaliText: string): string {\r\n  const bengaliToEnglish: { [key: string]: string } = {\r\n    'রসায়ন': 'chemistry',\r\n    'পদার্থবিজ্ঞান': 'physics', \r\n    'গণিত': 'mathematics',\r\n    'জীববিজ্ঞান': 'biology',\r\n    'ইংরেজি': 'english',\r\n    'বাংলা': 'bangla',\r\n    'জৈব রসায়ন': 'organic-chemistry',\r\n    'অজৈব রসায়ন': 'inorganic-chemistry',\r\n    'পদার্থের অবস্থা': 'states-of-matter',\r\n    'পদার্থ ও পদার্থের অবস্থা': 'matter-and-states',\r\n    'অ্যাসিড ও ক্ষার': 'acids-and-bases',\r\n    // Add more mappings as needed\r\n  };\r\n\r\n  // Check for exact matches first\r\n  if (bengaliToEnglish[bengaliText]) {\r\n    return bengaliToEnglish[bengaliText];\r\n  }\r\n\r\n  // Fallback: convert to kebab case\r\n  return toKebabCase(bengaliText);\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  // Check admin authentication\r\n  if (!isAdminRequest(request)) {\r\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n  }\r\n\r\n  try {\r\n    const { classId, name, name_bn } = await request.json();\r\n\r\n    if (!classId || !name || !name_bn) {\r\n      return NextResponse.json({ error: 'Missing required fields' }, { status: 400 });\r\n    }\r\n\r\n    // Create class directory\r\n    const classPath = path.join(process.cwd(), 'public', 'materials', classId.toString());\r\n    \r\n    try {\r\n      await fs.access(classPath);\r\n      return NextResponse.json({ error: 'Class already exists' }, { status: 409 });\r\n    } catch {\r\n      // Directory doesn't exist, create it\r\n      await fs.mkdir(classPath, { recursive: true });\r\n    }\r\n\r\n    // Create a metadata file to store Bengali names\r\n    const metadataPath = path.join(classPath, '.metadata.json');\r\n    const metadata = {\r\n      id: classId,\r\n      name,\r\n      name_bn,\r\n      created: new Date().toISOString()\r\n    };\r\n    \r\n    await fs.writeFile(metadataPath, JSON.stringify(metadata, null, 2));\r\n\r\n    return NextResponse.json({ \r\n      success: true, \r\n      message: 'Class created successfully',\r\n      data: { classId, name, name_bn }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error creating class:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(request: NextRequest) {\r\n  // Check admin authentication\r\n  if (!isAdminRequest(request)) {\r\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const classId = url.pathname.split('/').pop();\r\n\r\n    if (!classId) {\r\n      return NextResponse.json({ error: 'Class ID is required' }, { status: 400 });\r\n    }\r\n\r\n    const classPath = path.join(process.cwd(), 'public', 'materials', classId);\r\n    \r\n    try {\r\n      await fs.access(classPath);\r\n      await fs.rm(classPath, { recursive: true });\r\n      \r\n      return NextResponse.json({ \r\n        success: true, \r\n        message: 'Class deleted successfully' \r\n      });\r\n    } catch {\r\n      return NextResponse.json({ error: 'Class not found' }, { status: 404 });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error deleting class:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}