{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/app/api/curriculum/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport interface Topic {\r\n  id: string;\r\n  name: string;\r\n  name_bn: string;\r\n  pdfUrl: string;\r\n}\r\n\r\nexport interface Chapter {\r\n  id: string;\r\n  name: string;\r\n  name_bn: string;\r\n  topics: Topic[];\r\n}\r\n\r\nexport interface Subject {\r\n  id: string;\r\n  name: string;\r\n  name_bn: string;\r\n  chapters: Chapter[];\r\n}\r\n\r\nexport interface ClassLevel {\r\n  id: number;\r\n  name: string;\r\n  name_bn: string;\r\n  subjects: Subject[];\r\n}\r\n\r\n// Helper function to convert kebab-case to title case\r\nfunction kebabToTitle(str: string): string {\r\n  return str\r\n    .split('-')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n}\r\n\r\n// Helper function to convert title case to Bengali (placeholder - you'll need proper translations)\r\nfunction titleToBengali(str: string): string {\r\n  const translations: { [key: string]: string } = {\r\n    'Physics': 'পদার্থবিজ্ঞান',\r\n    'Math': 'গণিত',\r\n    'Mathematics': 'গণিত',\r\n    'Chemistry': 'রসায়ন',\r\n    'Bangla': 'বাংলা',\r\n    'Bengali': 'বাংলা',\r\n    'English': 'ইংরেজি',\r\n    'Biology': 'জীববিজ্ঞান',\r\n    'General Science': 'সাধারণ বিজ্ঞান',\r\n    'Social Science': 'সামাজিক বিজ্ঞান',\r\n    'Newtonian Mechanics': 'নিউটনিয়ান বলবিদ্যা',\r\n    'Thermodynamics': 'তাপগতিবিদ্যা',\r\n    'Calculus': 'ক্যালকুলাস',\r\n    'Periodic Table': 'পর্যায় সারণী',\r\n    'Literature': 'সাহিত্য',\r\n    \"Newton's 1st Law\": 'নিউটনের ১ম সূত্র',\r\n    \"Newton's 2nd Law\": 'নিউটনের ২য় সূত্র',\r\n    \"Newtons 1st Law\": 'নিউটনের ১ম সূত্র',\r\n    \"Newtons 2nd Law\": 'নিউটনের ২য় সূত্র',\r\n    'Zeroth Law': 'শূন্যতম সূত্র',\r\n    'Differentiation': 'অন্তরীকরণ',\r\n    'Periodic Trends': 'পর্যায়বৃত্ত ধর্ম',\r\n    'Kazi Nazrul Islam': 'কাজী নজরুল ইসলাম',\r\n    'Zeroth Law Of Thermodynamics': 'তাপগতিবিদ্যার শূন্যতম সূত্র',\r\n  };\r\n  \r\n  return translations[str] || str;\r\n}\r\n\r\nfunction getClassNameBengali(classId: number): string {\r\n  const bengaliNumbers: { [key: number]: string } = {\r\n    6: 'ষষ্ঠ শ্রেণী',\r\n    7: 'সপ্তম শ্রেণী',\r\n    8: 'অষ্টম শ্রেণী',\r\n    9: 'নবম শ্রেণী',\r\n    10: 'দশম শ্রেণী',\r\n    11: 'একাদশ শ্রেণী',\r\n    12: 'দ্বাদশ শ্রেণী',\r\n  };\r\n  \r\n  return bengaliNumbers[classId] || `${classId} শ্রেণী`;\r\n}\r\n\r\n// Function to scan the materials directory and generate curriculum data\r\nfunction generateCurriculumFromFileSystem(): ClassLevel[] {\r\n  const materialsPath = path.join(process.cwd(), 'public', 'materials');\r\n  \r\n  if (!fs.existsSync(materialsPath)) {\r\n    console.warn('Materials directory not found');\r\n    return [];\r\n  }\r\n\r\n  const curriculum: ClassLevel[] = [];\r\n  \r\n  try {\r\n    // Read class directories (should be numeric: 10, 11, 12, etc.)\r\n    const classDirs = fs.readdirSync(materialsPath, { withFileTypes: true })\r\n      .filter((dirent: fs.Dirent) => dirent.isDirectory())\r\n      .map((dirent: fs.Dirent) => dirent.name)\r\n      .filter((name: string) => /^\\d+$/.test(name)) // Only numeric directories\r\n      .sort((a: string, b: string) => parseInt(a) - parseInt(b));\r\n\r\n    for (const classDir of classDirs) {\r\n      const classPath = path.join(materialsPath, classDir);\r\n      const classId = parseInt(classDir);\r\n      \r\n      const subjects: Subject[] = [];\r\n      \r\n      // Read subject directories\r\n      const subjectDirs = fs.readdirSync(classPath, { withFileTypes: true })\r\n        .filter((dirent: fs.Dirent) => dirent.isDirectory())\r\n        .map((dirent: fs.Dirent) => dirent.name);\r\n\r\n      for (const subjectDir of subjectDirs) {\r\n        const subjectPath = path.join(classPath, subjectDir);\r\n        const subjectName = kebabToTitle(subjectDir);\r\n        \r\n        const chapters: Chapter[] = [];\r\n        \r\n        // Read chapter directories\r\n        const chapterDirs = fs.readdirSync(subjectPath, { withFileTypes: true })\r\n          .filter((dirent: fs.Dirent) => dirent.isDirectory())\r\n          .map((dirent: fs.Dirent) => dirent.name);\r\n\r\n        for (const chapterDir of chapterDirs) {\r\n          const chapterPath = path.join(subjectPath, chapterDir);\r\n          const chapterName = kebabToTitle(chapterDir);\r\n          \r\n          const topics: Topic[] = [];\r\n          \r\n          // Read topic directories\r\n          const topicDirs = fs.readdirSync(chapterPath, { withFileTypes: true })\r\n            .filter((dirent: fs.Dirent) => dirent.isDirectory())\r\n            .map((dirent: fs.Dirent) => dirent.name);\r\n\r\n          for (const topicDir of topicDirs) {\r\n            const topicPath = path.join(chapterPath, topicDir);\r\n            const topicName = kebabToTitle(topicDir);\r\n            \r\n            // Check if material.pdf exists\r\n            const pdfPath = path.join(topicPath, 'material.pdf');\r\n            if (fs.existsSync(pdfPath)) {\r\n              const topic: Topic = {\r\n                id: topicDir,\r\n                name: topicName,\r\n                name_bn: titleToBengali(topicName),\r\n                pdfUrl: `/materials/${classDir}/${subjectDir}/${chapterDir}/${topicDir}/material.pdf`\r\n              };\r\n              topics.push(topic);\r\n            }\r\n          }\r\n          \r\n          if (topics.length > 0) {\r\n            const chapter: Chapter = {\r\n              id: chapterDir,\r\n              name: chapterName,\r\n              name_bn: titleToBengali(chapterName),\r\n              topics\r\n            };\r\n            chapters.push(chapter);\r\n          }\r\n        }\r\n        \r\n        if (chapters.length > 0) {\r\n          const subject: Subject = {\r\n            id: subjectDir,\r\n            name: subjectName,\r\n            name_bn: titleToBengali(subjectName),\r\n            chapters\r\n          };\r\n          subjects.push(subject);\r\n        }\r\n      }\r\n      \r\n      if (subjects.length > 0) {\r\n        const classLevel: ClassLevel = {\r\n          id: classId,\r\n          name: `Class ${classId}`,\r\n          name_bn: getClassNameBengali(classId),\r\n          subjects\r\n        };\r\n        curriculum.push(classLevel);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error generating curriculum from file system:', error);\r\n  }\r\n  \r\n  return curriculum.sort((a, b) => b.id - a.id); // Sort descending (12, 11, 10)\r\n}\r\n\r\nexport async function GET() {\r\n  try {\r\n    const curriculum = generateCurriculumFromFileSystem();\r\n    return NextResponse.json({ success: true, data: curriculum });\r\n  } catch (error) {\r\n    console.error('Error in curriculum API:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Failed to generate curriculum' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}