{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/learn/pdf-viewer.tsx"],"sourcesContent":["\r\n'use client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Loader2, FileText, AlertCircle } from 'lucide-react';\r\n\r\ninterface PdfViewerProps {\r\n  pdfUrl: string;\r\n}\r\n\r\nexport function PdfViewer({ pdfUrl }: PdfViewerProps) {\r\n  const iframeRef = useRef<HTMLIFrameElement>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [pdfUrl]);\r\n\r\n  const handleLoad = () => {\r\n    setLoading(false);\r\n    setError(false);\r\n  };\r\n\r\n  const handleError = () => {\r\n    setLoading(false);\r\n    setError(true);\r\n  };\r\n\r\n  // Create a secure PDF URL with minimal security parameters for performance\r\n  const secureUrl = `/api/pdf?path=${encodeURIComponent(pdfUrl)}&t=${Math.floor(Date.now() / 60000)}#toolbar=0&navpanes=0&view=FitH`;\r\n\r\n  // Optimized keyboard shortcut prevention\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      // Only prevent critical shortcuts\r\n      if (e.ctrlKey && (e.key === 's' || e.key === 'p')) {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown, { passive: false });\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      className=\"pdf-viewer-container w-full aspect-[8.5/11] rounded-lg overflow-hidden border bg-white shadow-inner relative\"\r\n      onContextMenu={(e) => e.preventDefault()}\r\n      onDragStart={(e) => e.preventDefault()}\r\n      onDrop={(e) => e.preventDefault()}\r\n      onDragOver={(e) => e.preventDefault()}\r\n    >\r\n      {loading && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 z-10\">\r\n          <div className=\"text-center\">\r\n            <Loader2 className=\"h-8 w-8 animate-spin mx-auto mb-2 text-blue-500\" />\r\n            <p className=\"text-sm text-gray-600\">Loading PDF...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 z-10\">\r\n          <div className=\"text-center\">\r\n            <AlertCircle className=\"h-8 w-8 mx-auto mb-2 text-red-500\" />\r\n            <p className=\"text-sm text-gray-600\">Failed to load PDF</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <iframe\r\n        ref={iframeRef}\r\n        src={secureUrl}\r\n        className=\"w-full h-full\"\r\n        title=\"PDF Viewer\"\r\n        onLoad={handleLoad}\r\n        onError={handleError}\r\n        style={{\r\n          border: 'none',\r\n          pointerEvents: 'auto'\r\n        }}\r\n        // Optimized sandbox for performance\r\n        sandbox=\"allow-same-origin allow-scripts\"\r\n        loading=\"lazy\"\r\n      />\r\n      \r\n      {/* Minimal security overlay */}\r\n      <div \r\n        className=\"absolute inset-0 z-5 pointer-events-none\"\r\n        onContextMenu={(e) => e.preventDefault()}\r\n      />\r\n      \r\n      {/* Simplified watermark */}\r\n      <div className=\"absolute top-4 right-4 z-20 bg-black/20 text-white px-2 py-1 rounded text-xs backdrop-blur-sm pointer-events-none\">\r\n        <FileText className=\"h-3 w-3 inline mr-1\" />\r\n        Protected Content\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAFA;;;;AAQO,SAAS,UAAU,EAAE,MAAM,EAAkB;IAClD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAqB;IAC5C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,WAAW;YACvB,WAAW;QACb,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;KAAO;IAEX,MAAM,aAAa;QACjB,WAAW;QACX,SAAS;IACX;IAEA,MAAM,cAAc;QAClB,WAAW;QACX,SAAS;IACX;IAEA,2EAA2E;IAC3E,MAAM,YAAY,CAAC,cAAc,EAAE,mBAAmB,QAAQ,GAAG,EAAE,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,OAAO,+BAA+B,CAAC;IAElI,yCAAyC;IACzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB,CAAC;YACrB,kCAAkC;YAClC,IAAI,EAAE,OAAO,IAAI,CAAC,EAAE,GAAG,KAAK,OAAO,EAAE,GAAG,KAAK,GAAG,GAAG;gBACjD,EAAE,cAAc;gBAChB,OAAO;YACT;QACF;QAEA,SAAS,gBAAgB,CAAC,WAAW,eAAe;YAAE,SAAS;QAAM;QACrE,OAAO,IAAM,SAAS,mBAAmB,CAAC,WAAW;IACvD,GAAG,EAAE;IAEL,qBACE,8OAAC;QACC,WAAU;QACV,eAAe,CAAC,IAAM,EAAE,cAAc;QACtC,aAAa,CAAC,IAAM,EAAE,cAAc;QACpC,QAAQ,CAAC,IAAM,EAAE,cAAc;QAC/B,YAAY,CAAC,IAAM,EAAE,cAAc;;YAElC,yBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,iNAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;YAK1C,uBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,oNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;sCACvB,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;0BAK3C,8OAAC;gBACC,KAAK;gBACL,KAAK;gBACL,WAAU;gBACV,OAAM;gBACN,QAAQ;gBACR,SAAS;gBACT,OAAO;oBACL,QAAQ;oBACR,eAAe;gBACjB;gBACA,oCAAoC;gBACpC,SAAQ;gBACR,SAAQ;;;;;;0BAIV,8OAAC;gBACC,WAAU;gBACV,eAAe,CAAC,IAAM,EAAE,cAAc;;;;;;0BAIxC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,8MAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;oBAAwB;;;;;;;;;;;;;AAKpD","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/ai/flows/generate-diagnostic-test.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview A diagnostic test generation AI agent.\r\n *\r\n * - generateDiagnosticTest - A function that handles the generation of a diagnostic test.\r\n * - GenerateDiagnosticTestInput - The input type for the generateDiagnosticTest function.\r\n * - GenerateDiagnosticTestOutput - The return type for the generateDiagnosticTest function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateDiagnosticTestInputSchema = z.object({\r\n  pdfContent: z\r\n    .string()\r\n    .describe('The extracted text content from the topic PDF.'),\r\n  language: z.enum(['Bangla', 'English']).describe('The language of the student.'),\r\n});\r\nexport type GenerateDiagnosticTestInput = z.infer<\r\n  typeof GenerateDiagnosticTestInputSchema\r\n>;\r\n\r\nconst GenerateDiagnosticTestOutputSchema = z.object({\r\n  questions: z\r\n    .array(z.string())\r\n    .describe('The generated diagnostic test questions.'),\r\n});\r\nexport type GenerateDiagnosticTestOutput = z.infer<\r\n  typeof GenerateDiagnosticTestOutputSchema\r\n>;\r\n\r\nexport async function generateDiagnosticTest(\r\n  input: GenerateDiagnosticTestInput\r\n): Promise<GenerateDiagnosticTestOutput> {\r\n  return generateDiagnosticTestFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'generateDiagnosticTestPrompt',\r\n  input: {schema: GenerateDiagnosticTestInputSchema},\r\n  output: {schema: GenerateDiagnosticTestOutputSchema},\r\n  prompt: `You are an expert in generating diagnostic tests for students.\r\n\r\n  You will receive the content of a PDF document for a specific topic, and your goal is to generate a set of diagnostic questions based on that content.\r\n  The student will use these questions to assess their understanding of the topic and identify any weak areas.\r\n\r\n  Please generate a variety of question types, including multiple-choice, short answer, and true/false questions.\r\n\r\n  Consider the student's language which is {{{language}}}.\r\n\r\n  PDF Content: {{{pdfContent}}}\r\n\r\n  Output the questions in JSON format using the schema definition. Each question should be clear, concise, and directly related to the PDF content.\r\n  Make sure to output valid JSON.\r\n  `,\r\n});\r\n\r\nconst generateDiagnosticTestFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateDiagnosticTestFlow',\r\n    inputSchema: GenerateDiagnosticTestInputSchema,\r\n    outputSchema: GenerateDiagnosticTestOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAgCsB,yBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"grid gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/learn/diagnostic-test.tsx"],"sourcesContent":["'use client';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { generateDiagnosticTest } from '@/ai/flows/generate-diagnostic-test';\r\nimport { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n  DialogFooter,\r\n  DialogClose,\r\n} from '@/components/ui/dialog';\r\nimport { Loader2 } from 'lucide-react';\r\nimport { RadioGroup, RadioGroupItem } from '../ui/radio-group';\r\nimport { Label } from '../ui/label';\r\nimport { Card, CardContent } from '../ui/card';\r\n\r\ninterface DiagnosticTestProps {\r\n  pdfContent: string;\r\n}\r\n\r\nexport function DiagnosticTest({ pdfContent }: DiagnosticTestProps) {\r\n  const { t, language } = useTranslation();\r\n  const [questions, setQuestions] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [score, setScore] = useState<number | null>(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleStartTest = async () => {\r\n    setIsLoading(true);\r\n    setScore(null);\r\n    try {\r\n      // In a real scenario, you'd extract real content.\r\n      const result = await generateDiagnosticTest({\r\n        pdfContent,\r\n        language,\r\n      });\r\n      // For prototype, we use dummy questions if AI returns none\r\n      setQuestions(\r\n        result.questions.length > 0\r\n          ? result.questions\r\n          : [\r\n              'What is the main concept of this topic?',\r\n              'True or False: This is a sample question.',\r\n              'Which of the following is correct? A, B, or C.',\r\n            ]\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to generate test:', error);\r\n      // Fallback to dummy questions on error\r\n      setQuestions([\r\n        'What is the main concept of this topic? (Error Fallback)',\r\n        'True or False: This is a sample question. (Error Fallback)',\r\n        'Which of the following is correct? A, B, or C. (Error Fallback)',\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Mock scoring logic\r\n    const randomScore = Math.floor(Math.random() * (questions.length + 1));\r\n    setScore(randomScore);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {score !== null ? (\r\n        <Card className=\"bg-muted\">\r\n          <CardContent className=\"pt-6 text-center\">\r\n            <p className=\"text-lg font-medium\">{t('learn.test.result.title')}</p>\r\n            <p className=\"text-4xl font-bold text-primary\">\r\n              {score}\r\n              <span className=\"text-2xl text-muted-foreground\">/{questions.length}</span>\r\n            </p>\r\n            <Button onClick={handleStartTest} className=\"mt-4\">\r\n              {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n              Retake Test\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      ) : (\r\n        <Dialog open={isOpen} onOpenChange={setIsOpen}>\r\n          <DialogTrigger asChild>\r\n            <Button className=\"w-full\" onClick={handleStartTest}>\r\n              {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n              {t('learn.start_test')}\r\n            </Button>\r\n          </DialogTrigger>\r\n          <DialogContent className=\"max-w-2xl\">\r\n            <DialogHeader>\r\n              <DialogTitle>{t('learn.test.title')}</DialogTitle>\r\n            </DialogHeader>\r\n            {isLoading ? (\r\n              <div className=\"flex justify-center items-center h-48\">\r\n                <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n                <p className=\"ml-4\">{t('learn.test.generating')}</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4 max-h-[60vh] overflow-y-auto p-1\">\r\n                {questions.map((q, index) => (\r\n                  <div key={index} className=\"space-y-2 rounded-md border p-4\">\r\n                    <p>\r\n                      <strong>Q{index + 1}:</strong> {q}\r\n                    </p>\r\n                    <RadioGroup defaultValue=\"a\" className=\"flex flex-col space-y-1\">\r\n                      {['A', 'B', 'C', 'D'].map(option => (\r\n                        <div key={option} className=\"flex items-center space-x-3\">\r\n                           <RadioGroupItem value={option.toLowerCase()} id={`q${index}-${option}`} />\r\n                           <Label htmlFor={`q${index}-${option}`}>Sample Option {option}</Label>\r\n                        </div>\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <DialogFooter>\r\n              <DialogClose asChild>\r\n                <Button variant=\"outline\">Cancel</Button>\r\n              </DialogClose>\r\n              <Button onClick={handleSubmit} disabled={isLoading || questions.length === 0}>\r\n                {t('learn.test.submit')}\r\n              </Button>\r\n            </DialogFooter>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 827, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/ai/flows/generate-ai-explanation.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview This file defines a Genkit flow for generating AI-based explanations of topic content extracted from a PDF.\r\n *\r\n * - generateAiExplanation - A function that generates AI explanation for a given topic.\r\n * - GenerateAiExplanationInput - The input type for the generateAiExplanation function.\r\n * - GenerateAiExplanationOutput - The return type for the generateAiExplanation function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateAiExplanationInputSchema = z.object({\r\n  topicContent: z\r\n    .string()\r\n    .describe('The content of the topic extracted from the PDF.'),\r\n  language: z.enum(['Bangla', 'English']).describe('The language of the explanation.'),\r\n  mode: z.enum(['teacher', 'fun', 'simple']).describe('The teaching mode for the explanation.')\r\n});\r\nexport type GenerateAiExplanationInput = z.infer<typeof GenerateAiExplanationInputSchema>;\r\n\r\nconst GenerateAiExplanationOutputSchema = z.object({\r\n  explanation: z.string().describe('The AI-generated explanation of the topic.'),\r\n});\r\nexport type GenerateAiExplanationOutput = z.infer<typeof GenerateAiExplanationOutputSchema>;\r\n\r\nexport async function generateAiExplanation(input: GenerateAiExplanationInput): Promise<GenerateAiExplanationOutput> {\r\n  return generateAiExplanationFlow(input);\r\n}\r\n\r\nconst teacherPrompt = `You are an expert teacher explaining academic topics to students in a friendly, conversational, and human-like manner. Your explanation should be detailed and structured.`;\r\nconst funPrompt = `You are a fun and engaging tutor who uses creative examples, analogies, and humor to explain topics. Make learning exciting!`;\r\nconst simplePrompt = `You are a helpful assistant who can explain complex topics in the simplest way possible. Use very easy language and break everything down into small, digestible pieces.`;\r\n\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'generateAiExplanationPrompt',\r\n  input: {schema: GenerateAiExplanationInputSchema},\r\n  output: {schema: GenerateAiExplanationOutputSchema},\r\n  prompt: `\r\n  {{#if (eq mode \"teacher\")}}\r\n    ${teacherPrompt}\r\n  {{else if (eq mode \"fun\")}}\r\n    ${funPrompt}\r\n  {{else if (eq mode \"simple\")}}\r\n    ${simplePrompt}\r\n  {{/if}}\r\n\r\n  Based on the topic content below, generate a detailed explanation in {{{language}}}.\r\n\r\n  Your explanation should include:\r\n  1.  **Topic Definition:** A clear and easy-to-understand definition of the main topic.\r\n  2.  **Laws Breakdown:** If there are any laws or principles, break them down step-by-step. Explain the concepts behind them. Use examples.\r\n  3.  **Sample Question Patterns:** Provide a few sample questions (and their patterns/types) that are commonly asked from this topic in exams.\r\n\r\n  Topic Content:\r\n  {{topicContent}}`,\r\n});\r\n\r\nconst generateAiExplanationFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateAiExplanationFlow',\r\n    inputSchema: GenerateAiExplanationInputSchema,\r\n    outputSchema: GenerateAiExplanationOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IA2BsB,wBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 840, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/learn/ai-explanation.tsx"],"sourcesContent":["'use client';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { generateAiExplanation } from '@/ai/flows/generate-ai-explanation';\r\nimport { useState } from 'react';\r\nimport { Loader2, PlayCircle, StopCircle, Bot, Zap, BrainCircuit } from 'lucide-react';\r\nimport { Card, CardContent } from '../ui/card';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '../ui/select';\r\n\r\ninterface AiExplanationProps {\r\n  topicContent: string;\r\n}\r\n\r\ntype ExplanationMode = 'teacher' | 'fun' | 'simple';\r\n\r\nexport function AiExplanation({ topicContent }: AiExplanationProps) {\r\n  const { t, language } = useTranslation();\r\n  const [explanation, setExplanation] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [mode, setMode] = useState<ExplanationMode>('teacher');\r\n\r\n  const handleGetExplanation = async (selectedMode: ExplanationMode) => {\r\n    setIsLoading(true);\r\n    setExplanation('');\r\n    try {\r\n      const result = await generateAiExplanation({\r\n        topicContent,\r\n        language,\r\n        mode: selectedMode,\r\n      });\r\n      setExplanation(\r\n        result.explanation || 'This is a mock explanation from the AI.'\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to generate explanation:', error);\r\n      setExplanation(\r\n        'Sorry, an error occurred while generating the explanation. This is a fallback message.'\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleSpeech = () => {\r\n    // This is a mock function\r\n    if (isSpeaking) {\r\n      setIsSpeaking(false);\r\n    } else {\r\n      setIsSpeaking(true);\r\n      setTimeout(() => setIsSpeaking(false), 5000); // Simulate speech for 5s\r\n    }\r\n  };\r\n  \r\n  const onModeChange = (value: ExplanationMode) => {\r\n    setMode(value);\r\n    if(explanation){\r\n        handleGetExplanation(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n       <div className=\"flex flex-col sm:flex-row gap-4\">\r\n        <Select onValueChange={onModeChange} defaultValue={mode}>\r\n          <SelectTrigger className=\"w-full\">\r\n            <SelectValue placeholder={t('learn.explanation.select_mode')} />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"teacher\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <Bot /> {t('learn.explanation.mode.teacher')}\r\n                </div>\r\n            </SelectItem>\r\n            <SelectItem value=\"fun\">\r\n                 <div className=\"flex items-center gap-2\">\r\n                    <Zap /> {t('learn.explanation.mode.fun')}\r\n                </div>\r\n            </SelectItem>\r\n            <SelectItem value=\"simple\">\r\n                 <div className=\"flex items-center gap-2\">\r\n                    <BrainCircuit /> {t('learn.explanation.mode.simple')}\r\n                </div>\r\n            </SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n        <Button\r\n            className=\"w-full\"\r\n            onClick={() => handleGetExplanation(mode)}\r\n            disabled={isLoading}\r\n        >\r\n            {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n            {explanation ? t('learn.regenerate_explanation') : t('learn.get_explanation')}\r\n        </Button>\r\n      </div>\r\n\r\n\r\n      {isLoading && (\r\n        <div className=\"flex justify-center items-center py-4\">\r\n          <Loader2 className=\"h-6 w-6 animate-spin text-primary\" />\r\n          <p className=\"ml-2 text-muted-foreground\">{t('learn.explanation.generating')}</p>\r\n        </div>\r\n      )}\r\n\r\n      {explanation && !isLoading && (\r\n        <Card className=\"bg-muted\">\r\n          <CardContent className=\"pt-6 space-y-4\">\r\n            <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">{explanation}</p>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={handleToggleSpeech}\r\n              disabled={isSpeaking}\r\n            >\r\n              {isSpeaking ? (\r\n                <>\r\n                  <StopCircle className=\"mr-2 h-4 w-4\" />\r\n                  {t('learn.explanation.stop_audio')}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <PlayCircle className=\"mr-2 h-4 w-4\" />\r\n                  {t('learn.explanation.play_audio')}\r\n                </>\r\n              )}\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1320, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1349, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/ai/flows/answer-follow-up-questions.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview A chat-based follow-up question answering AI agent.\r\n *\r\n * - answerFollowUpQuestions - A function that handles answering follow-up questions about a topic.\r\n * - AnswerFollowUpQuestionsInput - The input type for the answerFollowUpQuestions function.\r\n * - AnswerFollowUpQuestionsOutput - The return type for the answerFollowUpQuestions function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst AnswerFollowUpQuestionsInputSchema = z.object({\r\n  pdfContent: z.string().describe('The content of the PDF for the topic.'),\r\n  question: z.string().describe('The follow-up question from the student.'),\r\n  language: z.enum(['Bangla', 'English']).describe('The language to respond in.'),\r\n});\r\nexport type AnswerFollowUpQuestionsInput = z.infer<typeof AnswerFollowUpQuestionsInputSchema>;\r\n\r\nconst AnswerFollowUpQuestionsOutputSchema = z.object({\r\n  answer: z.string().describe('The answer to the follow-up question.'),\r\n});\r\nexport type AnswerFollowUpQuestionsOutput = z.infer<typeof AnswerFollowUpQuestionsOutputSchema>;\r\n\r\nexport async function answerFollowUpQuestions(input: AnswerFollowUpQuestionsInput): Promise<AnswerFollowUpQuestionsOutput> {\r\n  return answerFollowUpQuestionsFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'answerFollowUpQuestionsPrompt',\r\n  input: {schema: AnswerFollowUpQuestionsInputSchema},\r\n  output: {schema: AnswerFollowUpQuestionsOutputSchema},\r\n  prompt: `You are a helpful AI chatbot assisting students with their studies. You will be provided with the content of a PDF document and a follow-up question from the student. Your task is to answer the question based on the provided content.\r\n\r\nPDF Content:\r\n{{{pdfContent}}}\r\n\r\nQuestion:\r\n{{{question}}}\r\n\r\nAnswer in {{language}}.\r\n`,\r\n});\r\n\r\nconst answerFollowUpQuestionsFlow = ai.defineFlow(\r\n  {\r\n    name: 'answerFollowUpQuestionsFlow',\r\n    inputSchema: AnswerFollowUpQuestionsInputSchema,\r\n    outputSchema: AnswerFollowUpQuestionsOutputSchema,\r\n  },\r\n  async input => {\r\n    const {output} = await prompt(input);\r\n    return output!;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAyBsB,0BAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatar.displayName = AvatarPrimitive.Root.displayName\r\n\r\nconst AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\r\n\r\nconst AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/learn/chat-bot.tsx"],"sourcesContent":["'use client';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { useState } from 'react';\r\nimport { answerFollowUpQuestions } from '@/ai/flows/answer-follow-up-questions';\r\nimport { Loader2, Send, User, Bot } from 'lucide-react';\r\nimport { ScrollArea } from '../ui/scroll-area';\r\nimport { Avatar, AvatarFallback } from '../ui/avatar';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface ChatBotProps {\r\n  pdfContent: string;\r\n}\r\n\r\ninterface Message {\r\n  sender: 'user' | 'bot';\r\n  text: string;\r\n}\r\n\r\nexport function ChatBot({ pdfContent }: ChatBotProps) {\r\n  const { t, language } = useTranslation();\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage: Message = { sender: 'user', text: input };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const result = await answerFollowUpQuestions({\r\n        pdfContent,\r\n        question: input,\r\n        language,\r\n      });\r\n      const botMessage: Message = {\r\n        sender: 'bot',\r\n        text:\r\n          result.answer ||\r\n          'I am a mock AI. This is a sample answer to your question.',\r\n      };\r\n      setMessages(prev => [...prev, botMessage]);\r\n    } catch (error) {\r\n      console.error('Failed to get answer:', error);\r\n      const errorMessage: Message = {\r\n        sender: 'bot',\r\n        text: 'Sorry, I encountered an error. This is a fallback response.',\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full max-h-[500px]\">\r\n      <ScrollArea className=\"flex-1 p-4 border rounded-lg\">\r\n        <div className=\"space-y-4\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={cn(\r\n                'flex items-start gap-3',\r\n                message.sender === 'user' ? 'justify-end' : 'justify-start'\r\n              )}\r\n            >\r\n              {message.sender === 'bot' && (\r\n                <Avatar>\r\n                  <AvatarFallback><Bot /></AvatarFallback>\r\n                </Avatar>\r\n              )}\r\n              <div\r\n                className={cn(\r\n                  'max-w-xs md:max-w-md lg:max-w-lg rounded-lg px-4 py-2',\r\n                  message.sender === 'user'\r\n                    ? 'bg-primary text-primary-foreground'\r\n                    : 'bg-muted'\r\n                )}\r\n              >\r\n                <p className=\"text-sm\">{message.text}</p>\r\n              </div>\r\n              {message.sender === 'user' && (\r\n                <Avatar>\r\n                  <AvatarFallback><User /></AvatarFallback>\r\n                </Avatar>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {isLoading && (\r\n            <div className=\"flex items-start gap-3 justify-start\">\r\n               <Avatar>\r\n                  <AvatarFallback><Bot /></AvatarFallback>\r\n                </Avatar>\r\n                <div className=\"bg-muted rounded-lg px-4 py-2 flex items-center\">\r\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n                </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </ScrollArea>\r\n      <div className=\"flex items-center gap-2 pt-4\">\r\n        <Input\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder={t('learn.chat.placeholder')}\r\n          onKeyDown={e => e.key === 'Enter' && handleSend()}\r\n          disabled={isLoading}\r\n        />\r\n        <Button onClick={handleSend} disabled={isLoading}>\r\n          {isLoading ? (\r\n            <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n          ) : (\r\n            <Send className=\"h-4 w-4\" />\r\n          )}\r\n          <span className=\"sr-only\">{t('learn.chat.send')}</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1734, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1787, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/hooks/use-media-query.ts"],"sourcesContent":["import * as React from \"react\"\r\n\r\nexport function useMediaQuery(query: string) {\r\n  const [value, setValue] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    function onChange(event: MediaQueryListEvent) {\r\n      setValue(event.matches)\r\n    }\r\n\r\n    const result = matchMedia(query)\r\n    result.addEventListener(\"change\", onChange)\r\n    setValue(result.matches)\r\n\r\n    return () => result.removeEventListener(\"change\", onChange)\r\n  }, [query])\r\n\r\n  return value\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,cAAc,KAAa;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,SAAS,SAAS,KAA0B;YAC1C,SAAS,MAAM,OAAO;QACxB;QAEA,MAAM,SAAS,WAAW;QAC1B,OAAO,gBAAgB,CAAC,UAAU;QAClC,SAAS,OAAO,OAAO;QAEvB,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG;QAAC;KAAM;IAEV,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1813, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/hooks/use-mobile.tsx"],"sourcesContent":["import { useMediaQuery } from \"@/hooks/use-media-query\"\r\n\r\nconst MOBILE_BREAKPOINT = 768\r\n\r\nexport function useIsMobile() {\r\n  return useMediaQuery(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,OAAO,CAAA,GAAA,qIAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;AAChE","debugId":null}},
    {"offset": {"line": 1828, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/app/%28main%29/learn/%5B...slug%5D/page.tsx"],"sourcesContent":["'use client';\r\nimport { getTopicBySlug } from '@/lib/curriculum';\r\nimport { notFound } from 'next/navigation';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from '@/components/ui/breadcrumb';\r\nimport Link from 'next/link';\r\nimport { useTranslation } from '@/hooks/use-translation';\r\nimport { PdfViewer } from '@/components/learn/pdf-viewer';\r\nimport { DiagnosticTest } from '@/components/learn/diagnostic-test';\r\nimport { AiExplanation } from '@/components/learn/ai-explanation';\r\nimport { ChatBot } from '@/components/learn/chat-bot';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Book, Bot, MessageSquare, TestTubeDiagonal } from 'lucide-react';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\n\r\ntype View = 'materials' | 'test' | 'ai-explanation' | 'chat';\r\n\r\nexport default function LearnPage({ params }: { params: Promise<{ slug: string[] }> }) {\r\n  const [slug, setSlug] = useState<string[]>([]);\r\n  const [topicData, setTopicData] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const { t, language } = useTranslation();\r\n  const isBangla = language === 'Bangla';\r\n  const isMobile = useIsMobile();\r\n  const [activeView, setActiveView] = useState<View>('materials');\r\n\r\n  useEffect(() => {\r\n    const loadParams = async () => {\r\n      const resolvedParams = await params;\r\n      setSlug(resolvedParams.slug);\r\n    };\r\n    loadParams();\r\n  }, [params]);\r\n\r\n  useEffect(() => {\r\n    if (slug.length === 0) return;\r\n    \r\n    const loadTopicData = async () => {\r\n      try {\r\n        const data = await getTopicBySlug(slug);\r\n        setTopicData(data);\r\n      } catch (error) {\r\n        console.error('Error loading topic data:', error);\r\n        setTopicData(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTopicData();\r\n  }, [slug]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto space-y-6\">\r\n        <div className=\"flex items-center justify-center h-48\">\r\n          <div className=\"text-muted-foreground\">Loading topic...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!topicData) {\r\n    notFound();\r\n  }\r\n\r\n  const { classLevel, subject, chapter, topic } = topicData;\r\n  const topicName = isBangla ? topic.name_bn : topic.name;\r\n  const mockPdfContent = `Content from PDF for topic: ${topic.name}. This is used to simulate content extraction for AI processing.`;\r\n  \r\n  const views = [\r\n    { id: 'materials', label: t('learn.study_materials'), icon: Book },\r\n    { id: 'test', label: t('learn.diagnostic_test'), icon: TestTubeDiagonal },\r\n    { id: 'ai-explanation', label: t('learn.ai_explanation'), icon: Bot },\r\n    { id: 'chat', label: t('learn.chat.title'), icon: MessageSquare },\r\n  ];\r\n\r\n  const renderContent = () => {\r\n    switch (activeView) {\r\n      case 'materials':\r\n        return (\r\n          <Card>\r\n            <CardContent className=\"p-0\">\r\n              <PdfViewer pdfUrl={topic.pdfUrl} />\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      case 'test':\r\n        return (\r\n          <Card>\r\n            <CardContent className=\"p-4 md:p-6 flex justify-center\">\r\n              <div className='w-full max-w-2xl'>\r\n                <DiagnosticTest pdfContent={mockPdfContent} />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      case 'ai-explanation':\r\n        return (\r\n          <Card>\r\n            <CardContent className=\"p-4 md:p-6\">\r\n              <AiExplanation topicContent={mockPdfContent} />\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      case 'chat':\r\n        return (\r\n          <Card>\r\n            <CardContent className=\"p-4 md:p-6\">\r\n              <ChatBot pdfContent={mockPdfContent} />\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto space-y-6\">\r\n      <Breadcrumb>\r\n        <BreadcrumbList>\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink asChild>\r\n              <Link href=\"/subjects\">{isBangla ? classLevel.name_bn : classLevel.name}</Link>\r\n            </BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbSeparator />\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink asChild>\r\n              <Link href=\"/subjects\">{isBangla ? subject.name_bn : subject.name}</Link>\r\n            </BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbSeparator />\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink asChild>\r\n              <Link href=\"/subjects\">{isBangla ? chapter.name_bn : chapter.name}</Link>\r\n            </BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbSeparator />\r\n          <BreadcrumbItem>\r\n            <BreadcrumbPage>{topicName}</BreadcrumbPage>\r\n          </BreadcrumbItem>\r\n        </BreadcrumbList>\r\n      </Breadcrumb>\r\n      <h1 className=\"text-4xl font-bold font-headline\">{topicName}</h1>\r\n      \r\n      {isMobile ? (\r\n        <Select value={activeView} onValueChange={(value) => setActiveView(value as View)}>\r\n          <SelectTrigger className=\"w-full\">\r\n            <SelectValue placeholder=\"Select a section\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {views.map(view => (\r\n              <SelectItem key={view.id} value={view.id}>\r\n                <div className='flex items-center gap-2'>\r\n                  <view.icon className=\"h-4 w-4\" />\r\n                  {view.label}\r\n                </div>\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n      ) : (\r\n        <Tabs value={activeView} onValueChange={(value) => setActiveView(value as View)} className=\"w-full\">\r\n          <TabsList className=\"grid w-full grid-cols-1 md:grid-cols-4\">\r\n            {views.map(view => (\r\n              <TabsTrigger key={view.id} value={view.id}>\r\n                <view.icon className=\"mr-2 h-4 w-4\" />\r\n                {view.label}\r\n              </TabsTrigger>\r\n            ))}\r\n          </TabsList>\r\n        </Tabs>\r\n      )}\r\n\r\n      <div className=\"mt-4\">{renderContent()}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}