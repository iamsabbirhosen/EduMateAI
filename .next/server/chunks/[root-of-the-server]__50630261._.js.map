{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///F:/EduMateFinalAI/EduMateAI/src/app/api/admin/subjects/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\n// Simple admin auth check\r\nfunction isAdminRequest(request: NextRequest): boolean {\r\n  const referer = request.headers.get('referer');\r\n  return !!(referer && referer.includes('localhost:9002/admin'));\r\n}\r\n\r\n// Helper function to transliterate Bengali to English\r\nfunction transliterateBengali(bengaliText: string): string {\r\n  const bengaliToEnglish: { [key: string]: string } = {\r\n    'রসায়ন': 'chemistry',\r\n    'পদার্থবিজ্ঞান': 'physics', \r\n    'গণিত': 'mathematics',\r\n    'জীববিজ্ঞান': 'biology',\r\n    'ইংরেজি': 'english',\r\n    'বাংলা': 'bangla',\r\n    'ইতিহাস': 'history',\r\n    'ভূগোল': 'geography',\r\n    'সামাজিক বিজ্ঞান': 'social-science',\r\n    'সাধারণ বিজ্ঞান': 'general-science',\r\n  };\r\n\r\n  if (bengaliToEnglish[bengaliText]) {\r\n    return bengaliToEnglish[bengaliText];\r\n  }\r\n\r\n  // Fallback: convert to kebab case\r\n  return bengaliText\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  // Check admin authentication\r\n  if (!isAdminRequest(request)) {\r\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n  }\r\n\r\n  try {\r\n    const { classId, name, name_bn } = await request.json();\r\n\r\n    if (!classId || !name || !name_bn) {\r\n      return NextResponse.json({ error: 'Missing required fields' }, { status: 400 });\r\n    }\r\n\r\n    // Convert Bengali name to English folder name\r\n    const subjectId = transliterateBengali(name_bn);\r\n\r\n    // Create subject directory\r\n    const subjectPath = path.join(process.cwd(), 'public', 'materials', classId.toString(), subjectId);\r\n    \r\n    try {\r\n      await fs.access(subjectPath);\r\n      return NextResponse.json({ error: 'Subject already exists' }, { status: 409 });\r\n    } catch {\r\n      // Directory doesn't exist, create it\r\n      await fs.mkdir(subjectPath, { recursive: true });\r\n    }\r\n\r\n    // Create metadata file\r\n    const metadataPath = path.join(subjectPath, '.metadata.json');\r\n    const metadata = {\r\n      id: subjectId,\r\n      name,\r\n      name_bn,\r\n      classId,\r\n      created: new Date().toISOString()\r\n    };\r\n    \r\n    await fs.writeFile(metadataPath, JSON.stringify(metadata, null, 2));\r\n\r\n    return NextResponse.json({ \r\n      success: true, \r\n      message: 'Subject created successfully',\r\n      data: { subjectId, name, name_bn, classId }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Error creating subject:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function DELETE(request: NextRequest) {\r\n  // Check admin authentication\r\n  if (!isAdminRequest(request)) {\r\n    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\r\n  }\r\n\r\n  try {\r\n    const url = new URL(request.url);\r\n    const subjectId = url.pathname.split('/').pop();\r\n    const { classId } = await request.json();\r\n\r\n    if (!subjectId || !classId) {\r\n      return NextResponse.json({ error: 'Subject ID and Class ID are required' }, { status: 400 });\r\n    }\r\n\r\n    const subjectPath = path.join(process.cwd(), 'public', 'materials', classId.toString(), subjectId);\r\n    \r\n    try {\r\n      await fs.access(subjectPath);\r\n      await fs.rm(subjectPath, { recursive: true });\r\n      \r\n      return NextResponse.json({ \r\n        success: true, \r\n        message: 'Subject deleted successfully' \r\n      });\r\n    } catch {\r\n      return NextResponse.json({ error: 'Subject not found' }, { status: 404 });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Error deleting subject:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}